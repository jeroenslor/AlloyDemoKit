@using EPiServer.Editor
@using EPiServer.Core
@model ElasticSearchContentModel

@{
    Layout = "~/Views/Shared/Layouts/_TwoPlusOne.cshtml";
}


<div class="span8 full search-form">
    <h2>@Html.PropertyFor(m => m.CurrentPage.Heading)</h2>

    @*We use GET to submit the form to enable bookmarking etc of search results.  However, as GET will remove other
        query string values not in the form we can't use that in edit mode.*@
    @using (Html.BeginForm(null, null, Model.Layout.SearchPageRouteValues, PageEditing.PageIsInEditMode ? FormMethod.Post : FormMethod.Get))
    {
        <div class="input-group">
            <input id="srchTxt" type="text" class="form-control" tabindex="1" name="q" style="width:75%;" value="@Model.Query">
            <span class="input-group-btn">
                <input type="submit" tabindex="2" class="btn" style="width: 200px" value="@Html.Translate("/alloy/searchpagetemplate/searchbutton")" />
            </span>
        </div><!-- /input-group -->
    }
</div>


<div class="row">
    @*Main area*@
    <div class="span8">

        @if (Model.Hits != null)
        {
            @*<div class="row">*@
            <div class="span8 grayHead">
                <h2>@Html.Translate("/alloy/searchpagetemplate/result")</h2>
                <p>
                    @Html.Translate("/alloy/searchpagetemplate/searchfor") <i>@Model.Query</i>
                    @Html.Translate("/alloy/searchpagetemplate/resultedin")
                    @if (Model.NumberOfHits > 0)
                    {
                        @Model.NumberOfHits
                        @Html.Raw(" ")
                        @Html.Translate("/alloy/searchpagetemplate/hits")
                    }
                    else
                    {
                        @Html.Translate("/alloy/searchpagetemplate/zero")
                    }

                    <div id="suggestion"></div>
                    <div id="suggestion2"></div>

                </p>
            </div>



            <div class="span8 SearchResults">
                @foreach (var hit in Model.Hits)
                {
                    var article = hit.Source as ArticlePageIndexModel;
                    var news = hit.Source as NewsPageIndexModel;

                    if (article != null)
                    {
                        <div class="listResult">
                            <h3><a href="@Url.ContentUrl(ContentReference.Parse(article.ContentReference))">@Html.Raw(article.Name)</a>
                            </h3>

                            <p>
                                @Html.Raw(article.MetaDescription)
                            </p>

                            <hr/>
                        </div>
                    }

                    if (news != null)
                    {
                        <div class="listResult">
                            <h3>
                                <a href="@Url.ContentUrl(ContentReference.Parse(news.ContentReference))">@Html.Raw(news.Name)</a>
                            </h3>

                            <p>
                                @Html.Raw(news.MetaDescription)
                            </p>

                            <hr />
                        </div>
                    }
                }
            </div>

            @* Display paging controls.*@
            <div class="span8 pagination pagination-centered">
                <ul>
                    @*Link to the previous paging page.*@
                    @*<li @Model.PagingPage == 1 ? class="disabled" : "active">*@
                    <li>
                        <a href="@Model.GetPagingUrl(@Model.PagingPage - 1)">&laquo; </a>
                    </li>

                    @*Display links for each specific paging page.*@
                    @for (int pageNumber = 1; pageNumber <= @Model.TotalPagingPages; pageNumber++)
                    {

                        @*<li @Model.PagingPage == @pageNumber ? class=active : "disabled" >*@
                        <li>
                            <a href="@Model.GetPagingUrl(@pageNumber)"> @pageNumber </a>
                        </li>
                    }


                    @*Link to the next paging page *@
                    @*                    <li @Model.PagingPage == @Model.TotalPagingPages ? class="disabled" : "" >*@
                    <li>
                        <a href="@Model.GetPagingUrl(@Model.PagingPage+1)">&raquo;</a>
                    </li>
                </ul>
            </div>
            @*End of search results area. *@
            @*</div>*@

        }

    </div>
</div>